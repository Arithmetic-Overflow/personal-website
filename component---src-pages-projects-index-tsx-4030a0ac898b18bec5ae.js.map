{"version":3,"file":"component---src-pages-projects-index-tsx-4030a0ac898b18bec5ae.js","mappings":"oKAAA,ICOA,GACCA,QDRc,IAA0B,0DCSxCC,QCTc,IAA0B,iEDUxCC,YEVc,IAA0B,iEFWxCC,WGXc,IAA0B,0DHYxCC,aIZc,IAA0B,4DJaxCC,OKbc,IAA0B,0D,sRCC9BC,EAAe,0CACfC,EAAK,gCACLC,EAAK,gCACLC,EAAK,gCACLC,EAAK,gCACLC,EAAK,gCCqBhB,EAdqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjC,sBAAIC,UAAWC,GAEPF,EAAKG,KAAI,SAAAC,GAAG,OACR,sBAAIH,UAAWC,EAAOE,EAAIC,QACtB,yBACKD,EAAIE,YCiB7B,EAlBqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACpC,qBAAGC,KAAMD,EAAeC,KAAMP,UCjBN,2CDkBvB,2BACC,yBAAOQ,UAAQ,EAACC,MAAI,GACnB,0BAAQC,IAAKJ,EAAeK,OAG7B,gBAAC,EAAD,CAAaZ,KAAMO,EAAeP,OAElC,0BACEO,EAAeM,OAGjB,qBAAGC,wBAAyB,CAACC,OAAQR,EAAeS,kBEVvD,EAXyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAH,OACrC,uBAAKhB,UDVgB,2CCWhBgB,EAAmBd,KAAI,SAACI,GAAD,OACpB,gBAAC,EAAD,CACIA,eAAgBA,EAChBW,IAAKX,EAAeM,a,UCfpC,GACIM,gBAAoB,CAAEb,KAAM,mBAAoBD,MAAO,MACvDe,YAAoB,CAAEd,KAAM,eAAgBD,MAAO,MACnDgB,YAAoB,CAAEf,KAAM,cAAeD,MAAO,MAClDiB,WAAoB,CAAEhB,KAAM,aAAcD,MAAO,MACjDkB,SAAoB,CAACjB,KAAM,WAAYD,MAAO,OC2BlD,EAtBqB,SAAC,GAEf,IACCmB,EADF,EADJC,KAAQC,kBAAqBC,MAEHxB,KAAI,SAAAsB,GAAS,MAAO,CAC5CjB,KAAMiB,EAAKG,YAAYC,KACvBhB,MAAOY,EAAKG,YAAYf,MACxBG,YAAaS,EAAKG,YAAYE,SAC9B9B,KAAMyB,EAAKG,YAAY5B,KAAKG,KAAI,SAAAC,GAAG,OAAI2B,EAAQ3B,MAC/CQ,IAAKoB,EAAAA,EAAOP,EAAKG,YAAYK,eAG/B,OACE,gBAAC,IAAD,CAAQC,YAAY,YAClB,gBAAC,IAAD,CAAKrB,MAAM,aACX,sCACA,sBAAIZ,UAAU,WAAd,wGACuG,qBAAGO,KAAK,yCAAR,cAEvG,gBAAC,EAAD,CAAiBS,mBAAoBO","sources":["webpack://gatsby-starter-default/./src/videos/boids_demo.webm","webpack://gatsby-starter-default/./src/pageData/projects/videos.tsx","webpack://gatsby-starter-default/./src/videos/artorias_quadtree.webm","webpack://gatsby-starter-default/./src/videos/cat_graphics_demo.webm","webpack://gatsby-starter-default/./src/videos/mazejs_gen.webm","webpack://gatsby-starter-default/./src/videos/mazejs_solve.webm","webpack://gatsby-starter-default/./src/videos/wile_dft.webm","webpack://gatsby-starter-default/./src/components/projects/projectTags.module.scss","webpack://gatsby-starter-default/./src/components/projects/projectTags.tsx","webpack://gatsby-starter-default/./src/components/project-card.tsx","webpack://gatsby-starter-default/./src/components/styles/project-card.module.scss","webpack://gatsby-starter-default/./src/components/project-card-grid.tsx","webpack://gatsby-starter-default/./src/pageData/projects/tagdata.tsx","webpack://gatsby-starter-default/./src/pages/projects/index.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/boids_demo-0b3e235c4158de34f605e088863bb6b9.webm\";","import BoidVid from \"/src/videos/boids_demo.webm\";\nimport QuadVid from \"/src/videos/artorias_quadtree.webm\";\nimport GraphicsVid from \"/src/videos/cat_graphics_demo.webm\";\nimport MazeGenVid from \"/src/videos/mazejs_gen.webm\";\nimport MazeSolveVid from \"/src/videos/mazejs_solve.webm\";\nimport DFTVid from \"/src/videos/wile_dft.webm\";\n\nexport default {\n\tBoidVid,\n\tQuadVid,\n\tGraphicsVid,\n\tMazeGenVid,\n\tMazeSolveVid,\n\tDFTVid\n}","export default __webpack_public_path__ + \"static/artorias_quadtree-eea04bc785f69c57a4e398b38bf6de32.webm\";","export default __webpack_public_path__ + \"static/cat_graphics_demo-10ce5bae67f3115a903ec35761e9413c.webm\";","export default __webpack_public_path__ + \"static/mazejs_gen-75b1763b93ac3beb627ebbb597778e25.webm\";","export default __webpack_public_path__ + \"static/mazejs_solve-c87c245c944920e6832eceb3c3f4e14b.webm\";","export default __webpack_public_path__ + \"static/wile_dft-9f47ff985fcc14db34dc2677b8c5716b.webm\";","// extracted by mini-css-extract-plugin\nexport var projectIcons = \"projectTags-module--projectIcons--ylveM\";\nexport var c1 = \"projectTags-module--c1--gZHSJ\";\nexport var c2 = \"projectTags-module--c2--2kKCv\";\nexport var c3 = \"projectTags-module--c3--tccCG\";\nexport var c4 = \"projectTags-module--c4--tr8Vb\";\nexport var c5 = \"projectTags-module--c5--nDddc\";","import React from 'react';\n\nimport * as styles from \"./projectTags.module.scss\";\n\ninterface Props {\n    tags: {\n        color: string;\n        name: string;\n    }[];\n};\n\nconst logoSize = 32;\n\nconst projectTags: React.FC<Props> = ({ tags }) => (\n    <ul className={styles.projectIcons}>\n        {\n            tags.map(tag =>\n                <li className={styles[tag.color]}>\n                    <p>\n                        {tag.name}\n                    </p>\n                </li>\n            )\n        }\n    </ul>\n)\n\nexport default projectTags","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./styles/project-card.module.scss\";\n\nimport ProjectTags from \"./projects/projectTags\";\n\ntype Props = {\n\tprojectDetails: {\n\t\tvid: any;\n\t\ttitle: string;\n\t\tdescription: string;\n\t\thref: string;\n\t\ttags: string[];\n\t};\n};\n\t\nconst ProjectCard: React.FC<Props> = ({ projectDetails }: Props) => (\n\t<a href={projectDetails.href} className={styles.projectCard}>\n\t\t<div>\n\t\t\t<video autoPlay loop>\n\t\t\t\t<source src={projectDetails.vid} />\n\t\t\t</video>\n\n\t\t\t<ProjectTags tags={projectDetails.tags} />\n\n\t\t\t<h2>\n\t\t\t\t{projectDetails.title}\n\t\t\t</h2>\n\n\t\t\t<p dangerouslySetInnerHTML={{__html: projectDetails.description}} />\n\t\t</div>\n\t</a>\n);\n\nexport default ProjectCard;","// extracted by mini-css-extract-plugin\nexport var projectGrid = \"project-card-module--projectGrid--W8j2w\";\nexport var projectCard = \"project-card-module--projectCard--CvgcJ\";","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProjectCard from \"./project-card\";\n\nimport * as styles from \"./styles/project-card.module.scss\";\n\ntype Props = {\n\tprojectDetailsList: Object[];\n};\n\t\nconst ProjectCardGrid: React.FC<Props> = ({ projectDetailsList }: Props) => (\n    <div className={styles.projectGrid}>\n        {projectDetailsList.map((projectDetails: Object) =>\n            <ProjectCard\n                projectDetails={projectDetails as any}\n                key={projectDetails.title}\n            />\n        )}\n    </div>\n);\n\nexport default ProjectCardGrid;","export default {\n    imageprocessing:    { name: \"image processing\", color: \"c1\" },\n    graphtheory:        { name: \"graph theory\", color: \"c2\" },\n    interactive:        { name: \"interactive\", color: \"c3\" },\n    simulation:         { name: \"simulation\", color: \"c4\" },\n    realtime:           {name: \"realtime\", color: \"c5\"}\n}","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nimport ProjectCardGrid from \"../../components/project-card-grid\";\n\nimport videos from \"../../pageData/projects/videos.tsx\";\nimport tagdata from \"../../pageData/projects/tagdata\";\n\nconst ProjectsPage = ({\n  data: { allMarkdownRemark: { nodes } }\n}) => {\n  const projectData = nodes.map(data => {return {\n    href: data.frontmatter.slug,\n    title: data.frontmatter.title,\n    description: data.frontmatter.carddesc,\n    tags: data.frontmatter.tags.map(tag => tagdata[tag]),\n    vid: videos[data.frontmatter.videoName]\n  }})\n\n  return (\n    <Layout currentPage=\"projects\">\n      <Seo title=\"projects\" />\n      <h1>Projects</h1>\n      <h3 className=\"outline\">\n        Click on a card to read its related post, the source code for most of these projects is available on <a href=\"https://github.com/cookies-xor-cream/\">my Github</a>\n      </h3>\n      <ProjectCardGrid projectDetailsList={projectData} />\n    </Layout>\n  );\n}\nexport default ProjectsPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date}) {\n      nodes {\n        frontmatter {\n          slug\n          title\n          carddesc\n          videoName\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["BoidVid","QuadVid","GraphicsVid","MazeGenVid","MazeSolveVid","DFTVid","projectIcons","c1","c2","c3","c4","c5","tags","className","styles","map","tag","color","name","projectDetails","href","autoPlay","loop","src","vid","title","dangerouslySetInnerHTML","__html","description","projectDetailsList","key","imageprocessing","graphtheory","interactive","simulation","realtime","projectData","data","allMarkdownRemark","nodes","frontmatter","slug","carddesc","tagdata","videos","videoName","currentPage"],"sourceRoot":""}